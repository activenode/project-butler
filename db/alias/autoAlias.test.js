const { AutoGeneratedAlias } = require("./autoAlias");

describe.each`
   index  | result
   ${0}   | ${"elk"}
   ${1}   | ${"ant"}
   ${9}   | ${"fox"}
   ${10}  | ${"fun-elk"}
   ${19}  | ${"fun-fox"}
   ${20}  | ${"dry-elk"}
   ${29}  | ${"dry-fox"}
   ${100} | ${"big-fun-elk"}
`("AutoGeneratedAlias", ({ index, result }) => {
   const autoGeneratedAlias = new AutoGeneratedAlias(index);
   test(`should hold alias "${index}" and alias "${result}" for index ${index}`, () => {
      expect(autoGeneratedAlias.numericAlias).toEqual(`${index}`);
      expect(autoGeneratedAlias.wordAlias).toEqual(result);
      expect(autoGeneratedAlias.tupleIndex).toEqual(index);
   });
});

describe("wordAlias", () => {
   test("should hold no duplicates", () => {
      const namedAliases = [];
      for (let i = 0; i < 1000; i++) {
         namedAliases.push(new AutoGeneratedAlias(i).wordAlias);
      }
      const uniqueNamedAliases = [...new Set(namedAliases)];
      expect(uniqueNamedAliases.length).toEqual(namedAliases.length);
   });
});

describe.each`
   index  | result
   ${0}   | ${"elk"}
   ${11}  | ${"fun-ant"}
   ${99}  | ${"hip-fox"}
   ${100} | ${"big-fun-elk"}
   ${110} | ${"fun-fun-elk"}
   ${999} | ${"hip-hip-fox"}
`("_generateNamedAutoAlias", ({ index, result }) => {
   test(`should return ${result} for index ${index}`, () => {
      const autoGeneratedAlias = new AutoGeneratedAlias(0);
      expect(autoGeneratedAlias._generateNamedAutoAlias(index)).toEqual(result);
   });
});
